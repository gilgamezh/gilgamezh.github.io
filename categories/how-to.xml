<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>No Todo Es Mec√°nico (Publicaciones sobre how-to)</title><link>https://gilgamezh.me/</link><description></description><atom:link href="https://gilgamezh.me/categories/how-to.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents ¬© 2024 &lt;a href="mailto:mail@gilgamezh.me"&gt;GiLgAmEzH&lt;/a&gt; 
&lt;p xmlns:cc="http://creativecommons.org/ns#"&gt;
    This work is licensed under
    &lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/?ref=chooser-v1"
       target="_blank"
       rel="license noopener noreferrer"
       style="display:inline-block;"&gt;
        CC BY-NC-SA 4.0
        &lt;img
            style="height:22px!important;margin-left:3px;vertical-align:text-bottom;"
            src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"
            alt=""
        &gt;
        &lt;img
            style="height:22px!important;margin-left:3px;vertical-align:text-bottom;"
            src="https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"
            alt=""
        &gt;
        &lt;img
            style="height:22px!important;margin-left:3px;vertical-align:text-bottom;"
            src="https://mirrors.creativecommons.org/presskit/icons/nc.svg?ref=chooser-v1"
            alt=""
        &gt;
        &lt;img
            style="height:22px!important;margin-left:3px;vertical-align:text-bottom;"
            src="https://mirrors.creativecommons.org/presskit/icons/sa.svg?ref=chooser-v1"
            alt=""
        &gt;
    &lt;/a&gt;
&lt;/p&gt;
</copyright><lastBuildDate>Sat, 24 Aug 2024 10:26:03 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Postgres non-durable options Docker container.</title><link>https://gilgamezh.me/posts/postgres-non-durable-options-docker-container/</link><dc:creator>GiLgAmEzH</dc:creator><description>&lt;p&gt;Some weeks ago I was at &lt;a class="reference external" href="http://www.python.org.ar/wiki/PyCamp/2017/"&gt;Pycamp&lt;/a&gt; whit LeCoVi
working on the Pyar website (check the link PyCamp is the best event ever!) and
I showed him my configuration to speed-up django tests.
Some days ago he asked me for the config. I think that it'is better to share it
in my blog, so here I'm.&lt;/p&gt;
&lt;p&gt;When you work with a framework like Django, to develop it with the same database
that you run in production is a really good idea.
It's really easy using &lt;cite&gt;docker-compose&lt;/cite&gt;. And to speed up your tests you can
configure postgres with its &lt;a class="reference external" href="https://www.postgresql.org/docs/current/static/non-durability.html"&gt;non-durable options&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here my recipe to do it.&lt;/p&gt;
&lt;p&gt;I'm using the &lt;a class="reference external" href="https://hub.docker.com/_/postgres/"&gt;oficial Postgres Docker image&lt;/a&gt;
adding only some scripts:&lt;/p&gt;
&lt;pre class="literal-block"&gt;FROM postgres:9.4.4
MAINTAINER gilgamezh &amp;lt;spam@gilgamezh.me&amp;gt;

COPY docker-entrypoint_db.sh /
COPY non_durable.sh /
ENTRYPOINT ["/docker-entrypoint_db.sh"]&lt;/pre&gt;
&lt;p&gt;Here the content of docker-entrypoint_db.sh. I'm using an environment variable
to enable or disable the non_durable settings:&lt;/p&gt;
&lt;pre class="literal-block"&gt;#!/bin/bash

if [ -v POSTGRES_NON_DURABLE_SETTINGS ]; then
    cp /non_durable.sh /docker-entrypoint-initdb.d/
fi

# run the default img entrypoint
/bin/sh /docker-entrypoint.sh postgres&lt;/pre&gt;
&lt;p&gt;And here the script to change the Postgres configuration:&lt;/p&gt;
&lt;pre class="literal-block"&gt;#!/bin/bash

# setting non-durable options
# https://www.postgresql.org/docs/current/static/non-durability.html
echo "Configuring postgres non-durable options."
# no need to flush data to disk.
echo "fsync = off" &amp;gt;&amp;gt; /var/lib/postgresql/data/postgresql.conf
# no need to force WAL writes to disk on every commit.
echo "synchronous_commit = off" &amp;gt;&amp;gt; /var/lib/postgresql/data/postgresql.conf
# no need to guard against partial page writes.
echo "full_page_writes = off" &amp;gt;&amp;gt; /var/lib/postgresql/data/postgresql.conf&lt;/pre&gt;
&lt;p&gt;Then in my docker-compose.yml file I'm setting the &lt;cite&gt;POSTGRES_NON_DURABLE_SETTINGS&lt;/cite&gt;
variable:&lt;/p&gt;
&lt;pre class="literal-block"&gt;environment:
  - POSTGRES_PASSWORD=xxxx
  - POSTGRES_NON_DURABLE_SETTINGS=1&lt;/pre&gt;
&lt;p&gt;With these changes my tests are running a lot faster. üöÄüöÄüöÄ&lt;/p&gt;</description><category>docker</category><category>how-to</category><category>postgres</category><guid>https://gilgamezh.me/posts/postgres-non-durable-options-docker-container/</guid><pubDate>Sun, 09 Apr 2017 18:55:48 GMT</pubDate></item><item><title>Compilar versi√≥n vieja de PHP para Archlinux</title><link>https://gilgamezh.me/posts/compilar-version-vieja-de-php-para-archlinux/</link><dc:creator>GiLgAmEzH</dc:creator><description>&lt;p&gt;Archlinux siempre tiene la versi√≥n m√°s nueva de todo, eso tiene muchas cosas
positivas.
Algo que suele pasar es que tenemos que usar algo que est√° productivo y que
tiene una versi√≥n &lt;em&gt;mucho&lt;/em&gt; m√°s vieja que la instalada.
Hace poco tuve que laburar con un Drupal que estaba usando PHP 5.3 y no me
qued√≥ otra que compilarlo.
As√≠ que ac√° dejo los pasos de c√≥mo hacerlo (b√°sicamente la linea del configure).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Descargar el source en /usr/local/src.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hacer un symlink en /usr/include/freetype2/freetype/freetype.h -&amp;gt; ../freetype.h
(sin esto da un error porque no encuentra freetype.h)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ejecutar configure, make y make install:&lt;/p&gt;
&lt;pre class="literal-block"&gt;./configure --enable-mbstring --with-mysql --with-mysqli --with-zlib \
--with-png-dir=/usr --with-jpeg-dir=/usr \
--with-freetype-dir=/usr/include/freetype2/ --with-curl --with-gettext \
--with-pdo-mysql --with-pdo-sqlite --with-bz2 \
--prefix=/usr/local/php-5.3.29 --with-libdir=lib64 --with-gd \
--with-libdir=lib64 --enable-cgi --enable-sockets --with-mcrypt \
--with-xpm-dir=/usr

make
make install&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hacer un symlink de /usr/local/php-5.3.29 a /usr/local/php&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copiar el php.ini que tengamos a /usr/local/php/lib&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Si usamos Apache en httpd.conf hay que hacer un &lt;em&gt;Include&lt;/em&gt; de
/etc/httpd/conf/extra/httpd-fastcgid.conf&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</description><category>archlinux</category><category>how-to</category><category>PHP</category><guid>https://gilgamezh.me/posts/compilar-version-vieja-de-php-para-archlinux/</guid><pubDate>Sat, 28 Feb 2015 15:17:52 GMT</pubDate></item><item><title>How to install Fisa-vim-cofig in Archlinux</title><link>https://gilgamezh.me/posts/how-to-install-fisa-vim-cofig-in-archlinux/</link><dc:creator>GiLgAmEzH</dc:creator><description>&lt;div&gt;&lt;img alt="/images/fisa-dev-config.png" src="https://gilgamezh.me/images/fisa-dev-config.png"&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/fisadev/fisa-vim-config/"&gt;Fisa-vim-config&lt;/a&gt;
es una excelente configuraci√≥n para Vim que recopila muchos
plugins y los pone a funcionar de una manera muy simple.
Esta desarrollada por @fisadev. Agradecimientos para √©l por permitir
tener un vim con esteroides muy √∫til para developers n00bs como yo :).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gilgamezh.me/posts/how-to-install-fisa-vim-cofig-in-archlinux/"&gt;Leer m√°s‚Ä¶&lt;/a&gt; (quedan 1 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>how-to</category><category>python</category><category>vim</category><guid>https://gilgamezh.me/posts/how-to-install-fisa-vim-cofig-in-archlinux/</guid><pubDate>Sat, 15 Mar 2014 18:22:44 GMT</pubDate></item></channel></rss>